@page "/Login"
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager


<EditForm Model="@loginModel" OnValidSubmit="ExecuteLogin">
    @if (showAuthenticationError)
    {
        <em>@authenticationErrorText</em>
    }
    <div class="row m-2">
        <div class="col-auto">
            <label for="id" class="visually-hidden">Id</label>
            <InputText id="id" class="form-control" @bind-Value="loginModel.LoginInfo" placeholder="ID Or Email" />
        </div>

        <div class="col-auto">
            <label for="password" class="visually-hidden">Password</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" placeholder="Password" />
        </div>

        <div class="col-auto">
            <button type="submit" class="btn btn-success">Log In</button>
        </div>
    </div>
</EditForm>

@code {
    private AuthenticationUserModel loginModel = new();

    private bool showAuthenticationError = false;
    private string authenticationErrorText = "";

    private async Task ExecuteLogin()
    {
        showAuthenticationError = false;

        AuthenticatedUserModel? result = await AuthService.Login(loginModel);

        if (result is not null)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            authenticationErrorText = "There was an error when trying to log in.";
            showAuthenticationError = true;
        }
    }


}
