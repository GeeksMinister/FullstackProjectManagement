@page "/Login"
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager


<EditForm Model="@loginModel" OnValidSubmit="ExecuteLogin">
    <div class="row m-2 login-form">
        @if (authenticationErrorText is not null)
        {
            <div class="col-auto m-2">
                <label for="error" class="visually-hidden">Error</label>
                <em class="text-danger">@authenticationErrorText</em>
            </div>
        }
        <div class="col-auto">
            <label for="id" class="visually-hidden">Id</label>
            <InputText id="id" class="form-control" @bind-Value="loginModel.LoginInfo" placeholder="ID Or Email" />
        </div>

        <div class="col-auto">
            <label for="password" class="visually-hidden">Password</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" placeholder="Password" />
        </div>

        <div class="col-auto">
            <button type="submit" class="btn btn-success">Log In</button>
        </div>
    </div>
</EditForm>

@code {
    private AuthenticationUserModel loginModel = new();

    private string authenticationErrorText = "";

    private async Task ExecuteLogin()
    {
        try
        {
            AuthenticatedUserModel? result = await AuthService.Login(loginModel);

            if (result is not null)
            {
                NavManager.NavigateTo("/");
            }
            else
            {
                authenticationErrorText = "Please check in your login info and password.";
            }

        }
        catch (Exception)
        {
            authenticationErrorText = "Faild to contact the server. Check your connection";
        }
    }


}
